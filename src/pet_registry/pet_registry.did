type Account = record { new_user_instance : opt principal };
type AddPetPayload = record {
  owner_payload : OwnerPayload;
  pet_payload : PetPayload;
};
type ID = record { pet_id : nat64 };
type OwnerData = record {
  id : principal;
  name : text;
  address : text;
  phone_number : text;
};
type OwnerPayload = record { name : text; address : text; phone_number : text };
type PetPayload = record {
  sex : text;
  image_url : text;
  name : text;
  breed : text;
  date_of_birth : text;
};
type PetRecord = record {
  id : nat64;
  sex : text;
  updated_at : opt nat64;
  image_url : text;
  created_at : nat64;
  transfer_to : opt principal;
  breed : text;
  date_of_birth : text;
  owner_details : OwnerData;
};
type Result = variant { Ok : opt PetRecord; Err : text };
type Result_1 = variant { Ok : PetRecord; Err : text };
service : {
  add_pet_record : (AddPetPayload, Account) -> (Result);
  claim_pet : (ID, OwnerPayload, Account) -> (Result_1);
  delete_pet_record : (ID, Account) -> (Result_1);
  get_pet_record : (ID) -> (Result_1) query;
  get_your_principal : () -> (principal) query;
  revoke_transfer : (ID, Account) -> (Result_1);
  transfer_pet : (ID, principal, Account) -> (Result_1);
  update_owner_record : (ID, OwnerPayload, Account) -> (Result_1);
  update_pet_record : (ID, PetPayload, Account) -> (Result_1);
  view_pending_pets : (principal) -> (vec nat64) query;
  view_pets_list : (principal) -> (vec nat64) query;
}
